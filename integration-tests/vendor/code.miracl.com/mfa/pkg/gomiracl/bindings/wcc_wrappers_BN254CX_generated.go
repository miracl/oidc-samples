// Generated by gen/wrappers/main.go from wrap/wcc_wrappers.go.tmpl.

//go:build !ignoredefaultcurves || BN254CX

package bindings

// #cgo LDFLAGS: -lamcl_wcc_BN254CX
// #include "amcl/wcc_BN254CX.h"
import "C"

// Curve constants
const (
	WCCPGSBN254CX = int(C.WCC_PGS_BN254CX)
	WCCPFSBN254CX = int(C.WCC_PFS_BN254CX)
)

// WCCRandomGenerateBN254CX is a go wrapper for C.WCC_BN254CX_RANDOM_GENERATE.
func WCCRandomGenerateBN254CX(RNG *Rand, S *Octet) error {
	code := C.WCC_BN254CX_RANDOM_GENERATE((*C.csprng)(RNG), (*C.octet)(S))

	return newError(code)
}

// WCCHqBN254CX is a go wrapper for C.WCC_BN254CX_Hq.
func WCCHqBN254CX(h int, A *Octet, B *Octet, C *Octet, D *Octet, res *Octet) {
	C.WCC_BN254CX_Hq(C.int(h), (*C.octet)(A), (*C.octet)(B), (*C.octet)(C), (*C.octet)(D), (*C.octet)(res))
}

// WCCGetG1MultipleBN254CX is a go wrapper for C.WCC_BN254CX_GET_G1_MULTIPLE.
func WCCGetG1MultipleBN254CX(S *Octet, HID *Octet, VG1 *Octet) error {
	code := C.WCC_BN254CX_GET_G1_MULTIPLE((*C.octet)(S), (*C.octet)(HID), (*C.octet)(VG1))

	return newError(code)
}

// WCCRecombineG1BN254CX is a go wrapper for C.WCC_BN254CX_RECOMBINE_G1.
func WCCRecombineG1BN254CX(R1 *Octet, R2 *Octet, R *Octet) error {
	code := C.WCC_BN254CX_RECOMBINE_G1((*C.octet)(R1), (*C.octet)(R2), (*C.octet)(R))

	return newError(code)
}

// WCCGetG2MultipleBN254CX is a go wrapper for C.WCC_BN254CX_GET_G2_MULTIPLE.
func WCCGetG2MultipleBN254CX(S *Octet, HID *Octet, VG2 *Octet) error {
	code := C.WCC_BN254CX_GET_G2_MULTIPLE((*C.octet)(S), (*C.octet)(HID), (*C.octet)(VG2))

	return newError(code)
}

// WCCRecombineG2BN254CX is a go wrapper for C.WCC_BN254CX_RECOMBINE_G2.
func WCCRecombineG2BN254CX(W1 *Octet, W2 *Octet, W *Octet) error {
	code := C.WCC_BN254CX_RECOMBINE_G2((*C.octet)(W1), (*C.octet)(W2), (*C.octet)(W))

	return newError(code)
}

// WCCReceiverKeyBN254CX is a go wrapper for C.WCC_BN254CX_RECEIVER_KEY.
func WCCReceiverKeyBN254CX(h int, y *Octet, w *Octet, pia *Octet, pib *Octet, PaG1 *Octet, PgG1 *Octet, BKeyG2 *Octet, IDA *Octet, AESKey *Octet) error {
	code := C.WCC_BN254CX_RECEIVER_KEY(C.int(h), (*C.octet)(y), (*C.octet)(w), (*C.octet)(pia), (*C.octet)(pib), (*C.octet)(PaG1), (*C.octet)(PgG1), (*C.octet)(BKeyG2), (*C.octet)(IDA), (*C.octet)(AESKey))

	return newError(code)
}

// WCCSenderKeyBN254CX is a go wrapper for C.WCC_BN254CX_SENDER_KEY.
func WCCSenderKeyBN254CX(h int, x *Octet, pia *Octet, pib *Octet, PbG2 *Octet, PgG1 *Octet, AKeyG1 *Octet, IDB *Octet, AESKey *Octet) error {
	code := C.WCC_BN254CX_SENDER_KEY(C.int(h), (*C.octet)(x), (*C.octet)(pia), (*C.octet)(pib), (*C.octet)(PbG2), (*C.octet)(PgG1), (*C.octet)(AKeyG1), (*C.octet)(IDB), (*C.octet)(AESKey))

	return newError(code)
}
