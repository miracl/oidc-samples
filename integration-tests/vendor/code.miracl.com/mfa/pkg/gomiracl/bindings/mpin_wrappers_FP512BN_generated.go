// Generated by gen/wrappers/main.go from wrap/mpin_wrappers.go.tmpl.

//go:build !ignoredefaultcurves || FP512BN

package bindings

// #cgo LDFLAGS: -lamcl_curve_FP512BN -lamcl_mpin_FP512BN -lamcl_pairing_FP512BN
// #include "amcl/amcl.h"
// #include "amcl/mpin_FP512BN.h"
// #include "amcl/randapi.h"
// #include "amcl/utils.h"
import "C"

// Curve constants
const (
	PASFP512BN        = int(C.MPIN_PAS)
	PGSFP512BN        = int(C.PGS_FP512BN)
	PFSFP512BN        = int(C.PFS_FP512BN)
	G1SFP512BN        = 2*PFSFP512BN + 1
	G2SFP512BN        = 4 * PFSFP512BN
	GTSFP512BN        = 12 * PFSFP512BN
	AESKeySizeFP512BN = int(C.AESKEY_FP512BN)
)

// Client1FP512BN is a go wrapper for C.MPIN_FP512BN_CLIENT_1.
func Client1FP512BN(h int, d int, ID *Octet, R *Rand, x *Octet, pin int, T *Octet, S *Octet, U *Octet, UT *Octet, TP *Octet) error {
	code := C.MPIN_FP512BN_CLIENT_1(C.int(h), C.int(d), (*C.octet)(ID), (*C.csprng)(R), (*C.octet)(x), C.int(pin), (*C.octet)(T), (*C.octet)(S), (*C.octet)(U), (*C.octet)(UT), (*C.octet)(TP))

	return newError(code)
}

// Client2FP512BN is a go wrapper for C.MPIN_FP512BN_CLIENT_2.
func Client2FP512BN(x *Octet, y *Octet, V *Octet) error {
	code := C.MPIN_FP512BN_CLIENT_2((*C.octet)(x), (*C.octet)(y), (*C.octet)(V))

	return newError(code)
}

// ClientKeyFP512BN is a go wrapper for C.MPIN_FP512BN_CLIENT_KEY.
func ClientKeyFP512BN(h int, g1 *Octet, g2 *Octet, pin int, r *Octet, x *Octet, p *Octet, T *Octet, K *Octet) error {
	code := C.MPIN_FP512BN_CLIENT_KEY(C.int(h), (*C.octet)(g1), (*C.octet)(g2), C.int(pin), (*C.octet)(r), (*C.octet)(x), (*C.octet)(p), (*C.octet)(T), (*C.octet)(K))

	return newError(code)
}

// ClientFP512BN is a go wrapper for C.MPIN_FP512BN_CLIENT.
func ClientFP512BN(h int, d int, ID *Octet, R *Rand, x *Octet, pin int, T *Octet, V *Octet, U *Octet, UT *Octet, TP *Octet, MESSAGE *Octet, t int, y *Octet) error {
	code := C.MPIN_FP512BN_CLIENT(C.int(h), C.int(d), (*C.octet)(ID), (*C.csprng)(R), (*C.octet)(x), C.int(pin), (*C.octet)(T), (*C.octet)(V), (*C.octet)(U), (*C.octet)(UT), (*C.octet)(TP), (*C.octet)(MESSAGE), C.int(t), (*C.octet)(y))

	return newError(code)
}

// ExtractPINFP512BN is a go wrapper for C.MPIN_FP512BN_EXTRACT_PIN.
func ExtractPINFP512BN(h int, ID *Octet, pin int, CS *Octet) error {
	code := C.MPIN_FP512BN_EXTRACT_PIN(C.int(h), (*C.octet)(ID), C.int(pin), (*C.octet)(CS))

	return newError(code)
}

// GetClientPermitFP512BN is a go wrapper for C.MPIN_FP512BN_GET_CLIENT_PERMIT.
func GetClientPermitFP512BN(h int, d int, S *Octet, ID *Octet, TP *Octet) error {
	code := C.MPIN_FP512BN_GET_CLIENT_PERMIT(C.int(h), C.int(d), (*C.octet)(S), (*C.octet)(ID), (*C.octet)(TP))

	return newError(code)
}

// GetClientSecretFP512BN is a go wrapper for C.MPIN_FP512BN_GET_CLIENT_SECRET.
func GetClientSecretFP512BN(S *Octet, ID *Octet, CS *Octet) error {
	code := C.MPIN_FP512BN_GET_CLIENT_SECRET((*C.octet)(S), (*C.octet)(ID), (*C.octet)(CS))

	return newError(code)
}

// GetDVSKeyPairFP512BN is a go wrapper for C.MPIN_FP512BN_GET_DVS_KEYPAIR.
func GetDVSKeyPairFP512BN(R *Rand, Z *Octet, Pa *Octet) error {
	code := C.MPIN_FP512BN_GET_DVS_KEYPAIR((*C.csprng)(R), (*C.octet)(Z), (*C.octet)(Pa))

	return newError(code)
}

// GetG1MultipleFP512BN is a go wrapper for C.MPIN_FP512BN_GET_G1_MULTIPLE.
func GetG1MultipleFP512BN(R *Rand, t int, x *Octet, G *Octet, W *Octet) error {
	code := C.MPIN_FP512BN_GET_G1_MULTIPLE((*C.csprng)(R), C.int(t), (*C.octet)(x), (*C.octet)(G), (*C.octet)(W))

	return newError(code)
}

// GetServerSecretFP512BN is a go wrapper for C.MPIN_FP512BN_GET_SERVER_SECRET.
func GetServerSecretFP512BN(S *Octet, SS *Octet) error {
	code := C.MPIN_FP512BN_GET_SERVER_SECRET((*C.octet)(S), (*C.octet)(SS))

	return newError(code)
}

// KangarooFP512BN is a go wrapper for C.MPIN_FP512BN_KANGAROO.
func KangarooFP512BN(E *Octet, F *Octet) error {
	code := C.MPIN_FP512BN_KANGAROO((*C.octet)(E), (*C.octet)(F))

	return newError(code)
}

// PrecomputeFP512BN is a go wrapper for C.MPIN_FP512BN_PRECOMPUTE.
func PrecomputeFP512BN(T *Octet, ID *Octet, CP *Octet, g1 *Octet, g2 *Octet) error {
	code := C.MPIN_FP512BN_PRECOMPUTE((*C.octet)(T), (*C.octet)(ID), (*C.octet)(CP), (*C.octet)(g1), (*C.octet)(g2))

	return newError(code)
}

// RandomGenerateFP512BN is a go wrapper for C.MPIN_FP512BN_RANDOM_GENERATE.
func RandomGenerateFP512BN(R *Rand, S *Octet) error {
	code := C.MPIN_FP512BN_RANDOM_GENERATE((*C.csprng)(R), (*C.octet)(S))

	return newError(code)
}

// RecombineG1FP512BN is a go wrapper for C.MPIN_FP512BN_RECOMBINE_G1.
func RecombineG1FP512BN(Q1 *Octet, Q2 *Octet, Q *Octet) error {
	code := C.MPIN_FP512BN_RECOMBINE_G1((*C.octet)(Q1), (*C.octet)(Q2), (*C.octet)(Q))

	return newError(code)
}

// RecombineG2FP512BN is a go wrapper for C.MPIN_FP512BN_RECOMBINE_G2.
func RecombineG2FP512BN(P1 *Octet, P2 *Octet, P *Octet) error {
	code := C.MPIN_FP512BN_RECOMBINE_G2((*C.octet)(P1), (*C.octet)(P2), (*C.octet)(P))

	return newError(code)
}

// Server2FP512BN is a go wrapper for C.MPIN_FP512BN_SERVER_2.
func Server2FP512BN(d int, HID *Octet, HTID *Octet, y *Octet, SS *Octet, U *Octet, UT *Octet, V *Octet, E *Octet, F *Octet, Pa *Octet) error {
	code := C.MPIN_FP512BN_SERVER_2(C.int(d), (*C.octet)(HID), (*C.octet)(HTID), (*C.octet)(y), (*C.octet)(SS), (*C.octet)(U), (*C.octet)(UT), (*C.octet)(V), (*C.octet)(E), (*C.octet)(F), (*C.octet)(Pa))

	return newError(code)
}

// ServerKeyFP512BN is a go wrapper for C.MPIN_FP512BN_SERVER_KEY.
func ServerKeyFP512BN(h int, Z *Octet, SS *Octet, w *Octet, p *Octet, I *Octet, U *Octet, UT *Octet, K *Octet) error {
	code := C.MPIN_FP512BN_SERVER_KEY(C.int(h), (*C.octet)(Z), (*C.octet)(SS), (*C.octet)(w), (*C.octet)(p), (*C.octet)(I), (*C.octet)(U), (*C.octet)(UT), (*C.octet)(K))

	return newError(code)
}

// ServerFP512BN is a go wrapper for C.MPIN_FP512BN_SERVER.
func ServerFP512BN(h int, d int, HID *Octet, HTID *Octet, y *Octet, SS *Octet, U *Octet, UT *Octet, V *Octet, E *Octet, F *Octet, ID *Octet, MESSAGE *Octet, t int, Pa *Octet) error {
	code := C.MPIN_FP512BN_SERVER(C.int(h), C.int(d), (*C.octet)(HID), (*C.octet)(HTID), (*C.octet)(y), (*C.octet)(SS), (*C.octet)(U), (*C.octet)(UT), (*C.octet)(V), (*C.octet)(E), (*C.octet)(F), (*C.octet)(ID), (*C.octet)(MESSAGE), C.int(t), (*C.octet)(Pa))

	return newError(code)
}

// Server1FP512BN is a go wrapper for C.MPIN_FP512BN_SERVER_1.
func Server1FP512BN(h int, d int, ID *Octet, HID *Octet, HTID *Octet) {
	C.MPIN_FP512BN_SERVER_1(C.int(h), C.int(d), (*C.octet)(ID), (*C.octet)(HID), (*C.octet)(HTID))
}
