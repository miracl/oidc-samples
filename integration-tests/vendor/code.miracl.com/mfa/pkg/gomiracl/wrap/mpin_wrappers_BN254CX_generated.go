// Generated by gen/wrappers/main.go from mpin_wrappers.go.tmpl.

//go:build !ignoredefaultcurves || BN254CX

package wrap

import "code.miracl.com/mfa/pkg/gomiracl/bindings"

// Client1BN254CX is a wrapper of bindings.MPIN_BN254CX_CLIENT_1.
func Client1BN254CX(h int, d int, ID []byte, R *bindings.Rand, x []byte, pin int, T []byte, TP []byte) (xResult []byte, S []byte, U []byte, UT []byte, err error) {

	IDOct := bindings.NewOctet(ID)
	defer IDOct.Free()

	var xOct *bindings.Octet
	if x != nil {
		xOct = bindings.NewOctet(x)
		defer xOct.Free()
	} else {
		xSize := bindings.PGSBN254CX
		xOct = bindings.MakeOctet(xSize)
		defer xOct.Free()
	}

	TOct := bindings.NewOctet(T)
	defer TOct.Free()

	SSize := bindings.G1SBN254CX
	SOct := bindings.MakeOctet(SSize)
	defer SOct.Free()

	USize := bindings.G1SBN254CX
	UOct := bindings.MakeOctet(USize)
	defer UOct.Free()

	UTSize := bindings.G1SBN254CX
	UTOct := bindings.MakeOctet(UTSize)
	defer UTOct.Free()

	TPOct := bindings.NewOctet(TP)
	defer TPOct.Free()

	err = bindings.Client1BN254CX(h, d, IDOct, R, xOct, pin, TOct, SOct, UOct, UTOct, TPOct)

	xResult = xOct.ToBytes()

	S = SOct.ToBytes()

	U = UOct.ToBytes()

	UT = UTOct.ToBytes()

	return
}

// Client2BN254CX is a wrapper of bindings.MPIN_BN254CX_CLIENT_2.
func Client2BN254CX(x []byte, y []byte, V []byte) (VResult []byte, err error) {

	xOct := bindings.NewOctet(x)
	defer xOct.Free()

	yOct := bindings.NewOctet(y)
	defer yOct.Free()

	VOct := bindings.NewOctet(V)
	defer VOct.Free()

	err = bindings.Client2BN254CX(xOct, yOct, VOct)

	VResult = VOct.ToBytes()

	return
}

// ClientKeyBN254CX is a wrapper of bindings.MPIN_BN254CX_CLIENT_KEY.
func ClientKeyBN254CX(h int, g1 []byte, g2 []byte, pin int, r []byte, x []byte, p []byte, T []byte) (K []byte, err error) {

	g1Oct := bindings.NewOctet(g1)
	defer g1Oct.Free()

	g2Oct := bindings.NewOctet(g2)
	defer g2Oct.Free()

	rOct := bindings.NewOctet(r)
	defer rOct.Free()

	xOct := bindings.NewOctet(x)
	defer xOct.Free()

	pOct := bindings.NewOctet(p)
	defer pOct.Free()

	TOct := bindings.NewOctet(T)
	defer TOct.Free()

	KSize := bindings.PASBN254CX
	KOct := bindings.MakeOctet(KSize)
	defer KOct.Free()

	err = bindings.ClientKeyBN254CX(h, g1Oct, g2Oct, pin, rOct, xOct, pOct, TOct, KOct)

	K = KOct.ToBytes()

	return
}

// ClientBN254CX is a wrapper of bindings.MPIN_BN254CX_CLIENT.
func ClientBN254CX(h int, d int, ID []byte, R *bindings.Rand, x []byte, pin int, T []byte, TP []byte, MESSAGE []byte, t int) (xResult []byte, V []byte, U []byte, UT []byte, y []byte, err error) {

	IDOct := bindings.NewOctet(ID)
	defer IDOct.Free()

	var xOct *bindings.Octet
	if x != nil {
		xOct = bindings.NewOctet(x)
		defer xOct.Free()
	} else {
		xSize := bindings.PGSBN254CX
		xOct = bindings.MakeOctet(xSize)
		defer xOct.Free()
	}

	TOct := bindings.NewOctet(T)
	defer TOct.Free()

	VSize := bindings.G1SBN254CX
	VOct := bindings.MakeOctet(VSize)
	defer VOct.Free()

	USize := bindings.G1SBN254CX
	UOct := bindings.MakeOctet(USize)
	defer UOct.Free()

	UTSize := bindings.G1SBN254CX
	UTOct := bindings.MakeOctet(UTSize)
	defer UTOct.Free()

	TPOct := bindings.NewOctet(TP)
	defer TPOct.Free()

	MESSAGEOct := bindings.NewOctet(MESSAGE)
	defer MESSAGEOct.Free()

	ySize := bindings.PGSBN254CX
	yOct := bindings.MakeOctet(ySize)
	defer yOct.Free()

	err = bindings.ClientBN254CX(h, d, IDOct, R, xOct, pin, TOct, VOct, UOct, UTOct, TPOct, MESSAGEOct, t, yOct)

	xResult = xOct.ToBytes()

	V = VOct.ToBytes()

	U = UOct.ToBytes()

	UT = UTOct.ToBytes()

	y = yOct.ToBytes()

	return
}

// ExtractPINBN254CX is a wrapper of bindings.MPIN_BN254CX_EXTRACT_PIN.
func ExtractPINBN254CX(h int, ID []byte, pin int, CS []byte) (CSResult []byte, err error) {

	IDOct := bindings.NewOctet(ID)
	defer IDOct.Free()

	CSOct := bindings.NewOctet(CS)
	defer CSOct.Free()

	err = bindings.ExtractPINBN254CX(h, IDOct, pin, CSOct)

	CSResult = CSOct.ToBytes()

	return
}

// GetClientPermitBN254CX is a wrapper of bindings.MPIN_BN254CX_GET_CLIENT_PERMIT.
func GetClientPermitBN254CX(h int, d int, S []byte, ID []byte) (TP []byte, err error) {

	SOct := bindings.NewOctet(S)
	defer SOct.Free()

	IDOct := bindings.NewOctet(ID)
	defer IDOct.Free()

	TPSize := bindings.G1SBN254CX
	TPOct := bindings.MakeOctet(TPSize)
	defer TPOct.Free()

	err = bindings.GetClientPermitBN254CX(h, d, SOct, IDOct, TPOct)

	TP = TPOct.ToBytes()

	return
}

// GetClientSecretBN254CX is a wrapper of bindings.MPIN_BN254CX_GET_CLIENT_SECRET.
func GetClientSecretBN254CX(S []byte, ID []byte) (CS []byte, err error) {

	SOct := bindings.NewOctet(S)
	defer SOct.Free()

	IDOct := bindings.NewOctet(ID)
	defer IDOct.Free()

	CSSize := bindings.G1SBN254CX
	CSOct := bindings.MakeOctet(CSSize)
	defer CSOct.Free()

	err = bindings.GetClientSecretBN254CX(SOct, IDOct, CSOct)

	CS = CSOct.ToBytes()

	return
}

// GetDVSKeyPairBN254CX is a wrapper of bindings.MPIN_BN254CX_GET_DVS_KEYPAIR.
func GetDVSKeyPairBN254CX(R *bindings.Rand, Z []byte) (ZResult []byte, Pa []byte, err error) {

	var ZOct *bindings.Octet
	if Z != nil {
		ZOct = bindings.NewOctet(Z)
		defer ZOct.Free()
	} else {
		ZSize := bindings.PGSBN254CX
		ZOct = bindings.MakeOctet(ZSize)
		defer ZOct.Free()
	}

	PaSize := bindings.G2SBN254CX
	PaOct := bindings.MakeOctet(PaSize)
	defer PaOct.Free()

	err = bindings.GetDVSKeyPairBN254CX(R, ZOct, PaOct)

	ZResult = ZOct.ToBytes()

	Pa = PaOct.ToBytes()

	return
}

// GetG1MultipleBN254CX is a wrapper of bindings.MPIN_BN254CX_GET_G1_MULTIPLE.
func GetG1MultipleBN254CX(R *bindings.Rand, t int, x []byte, G []byte) (xResult []byte, W []byte, err error) {

	var xOct *bindings.Octet
	if x != nil {
		xOct = bindings.NewOctet(x)
		defer xOct.Free()
	} else {
		xSize := bindings.PGSBN254CX
		xOct = bindings.MakeOctet(xSize)
		defer xOct.Free()
	}

	GOct := bindings.NewOctet(G)
	defer GOct.Free()

	WSize := bindings.G1SBN254CX
	WOct := bindings.MakeOctet(WSize)
	defer WOct.Free()

	err = bindings.GetG1MultipleBN254CX(R, t, xOct, GOct, WOct)

	xResult = xOct.ToBytes()

	W = WOct.ToBytes()

	return
}

// GetServerSecretBN254CX is a wrapper of bindings.MPIN_BN254CX_GET_SERVER_SECRET.
func GetServerSecretBN254CX(S []byte) (SS []byte, err error) {

	SOct := bindings.NewOctet(S)
	defer SOct.Free()

	SSSize := bindings.G2SBN254CX
	SSOct := bindings.MakeOctet(SSSize)
	defer SSOct.Free()

	err = bindings.GetServerSecretBN254CX(SOct, SSOct)

	SS = SSOct.ToBytes()

	return
}

// KangarooBN254CX is a wrapper of bindings.MPIN_BN254CX_KANGAROO.
func KangarooBN254CX(E []byte, F []byte) (err error) {

	EOct := bindings.NewOctet(E)
	defer EOct.Free()

	FOct := bindings.NewOctet(F)
	defer FOct.Free()

	err = bindings.KangarooBN254CX(EOct, FOct)

	return
}

// PrecomputeBN254CX is a wrapper of bindings.MPIN_BN254CX_PRECOMPUTE.
func PrecomputeBN254CX(T []byte, ID []byte, CP []byte) (g1 []byte, g2 []byte, err error) {

	TOct := bindings.NewOctet(T)
	defer TOct.Free()

	IDOct := bindings.NewOctet(ID)
	defer IDOct.Free()

	CPOct := bindings.NewOctet(CP)
	defer CPOct.Free()

	g1Size := bindings.GTSBN254CX
	g1Oct := bindings.MakeOctet(g1Size)
	defer g1Oct.Free()

	g2Size := bindings.GTSBN254CX
	g2Oct := bindings.MakeOctet(g2Size)
	defer g2Oct.Free()

	err = bindings.PrecomputeBN254CX(TOct, IDOct, CPOct, g1Oct, g2Oct)

	g1 = g1Oct.ToBytes()

	g2 = g2Oct.ToBytes()

	return
}

// RandomGenerateBN254CX is a wrapper of bindings.MPIN_BN254CX_RANDOM_GENERATE.
func RandomGenerateBN254CX(R *bindings.Rand) (S []byte, err error) {

	SSize := bindings.PGSBN254CX
	SOct := bindings.MakeOctet(SSize)
	defer SOct.Free()

	err = bindings.RandomGenerateBN254CX(R, SOct)

	S = SOct.ToBytes()

	return
}

// RecombineG1BN254CX is a wrapper of bindings.MPIN_BN254CX_RECOMBINE_G1.
func RecombineG1BN254CX(Q1 []byte, Q2 []byte) (Q []byte, err error) {

	Q1Oct := bindings.NewOctet(Q1)
	defer Q1Oct.Free()

	Q2Oct := bindings.NewOctet(Q2)
	defer Q2Oct.Free()

	QSize := bindings.G1SBN254CX
	QOct := bindings.MakeOctet(QSize)
	defer QOct.Free()

	err = bindings.RecombineG1BN254CX(Q1Oct, Q2Oct, QOct)

	Q = QOct.ToBytes()

	return
}

// RecombineG2BN254CX is a wrapper of bindings.MPIN_BN254CX_RECOMBINE_G2.
func RecombineG2BN254CX(P1 []byte, P2 []byte) (P []byte, err error) {

	P1Oct := bindings.NewOctet(P1)
	defer P1Oct.Free()

	P2Oct := bindings.NewOctet(P2)
	defer P2Oct.Free()

	PSize := bindings.G2SBN254CX
	POct := bindings.MakeOctet(PSize)
	defer POct.Free()

	err = bindings.RecombineG2BN254CX(P1Oct, P2Oct, POct)

	P = POct.ToBytes()

	return
}

// Server2BN254CX is a wrapper of bindings.MPIN_BN254CX_SERVER_2.
func Server2BN254CX(d int, HID []byte, HTID []byte, y []byte, SS []byte, U []byte, UT []byte, V []byte, Pa []byte) (err error) {

	HIDOct := bindings.NewOctet(HID)
	defer HIDOct.Free()

	HTIDOct := bindings.NewOctet(HTID)
	defer HTIDOct.Free()

	yOct := bindings.NewOctet(y)
	defer yOct.Free()

	SSOct := bindings.NewOctet(SS)
	defer SSOct.Free()

	UOct := bindings.NewOctet(U)
	defer UOct.Free()

	UTOct := bindings.NewOctet(UT)
	defer UTOct.Free()

	VOct := bindings.NewOctet(V)
	defer VOct.Free()

	PaOct := bindings.NewOctet(Pa)
	defer PaOct.Free()

	err = bindings.Server2BN254CX(d, HIDOct, HTIDOct, yOct, SSOct, UOct, UTOct, VOct, nil, nil, PaOct)

	return
}

// ServerKeyBN254CX is a wrapper of bindings.MPIN_BN254CX_SERVER_KEY.
func ServerKeyBN254CX(h int, Z []byte, SS []byte, w []byte, p []byte, I []byte, U []byte, UT []byte) (K []byte, err error) {

	ZOct := bindings.NewOctet(Z)
	defer ZOct.Free()

	SSOct := bindings.NewOctet(SS)
	defer SSOct.Free()

	wOct := bindings.NewOctet(w)
	defer wOct.Free()

	pOct := bindings.NewOctet(p)
	defer pOct.Free()

	IOct := bindings.NewOctet(I)
	defer IOct.Free()

	UOct := bindings.NewOctet(U)
	defer UOct.Free()

	UTOct := bindings.NewOctet(UT)
	defer UTOct.Free()

	KSize := bindings.PASBN254CX
	KOct := bindings.MakeOctet(KSize)
	defer KOct.Free()

	err = bindings.ServerKeyBN254CX(h, ZOct, SSOct, wOct, pOct, IOct, UOct, UTOct, KOct)

	K = KOct.ToBytes()

	return
}

// ServerBN254CX is a wrapper of bindings.MPIN_BN254CX_SERVER.
func ServerBN254CX(h int, d int, SS []byte, U []byte, UT []byte, V []byte, ID []byte, MESSAGE []byte, t int, Pa []byte) (HID []byte, HTID []byte, y []byte, err error) {

	HIDSize := bindings.G1SBN254CX
	HIDOct := bindings.MakeOctet(HIDSize)
	defer HIDOct.Free()

	HTIDSize := bindings.G1SBN254CX
	HTIDOct := bindings.MakeOctet(HTIDSize)
	defer HTIDOct.Free()

	ySize := bindings.PGSBN254CX
	yOct := bindings.MakeOctet(ySize)
	defer yOct.Free()

	SSOct := bindings.NewOctet(SS)
	defer SSOct.Free()

	UOct := bindings.NewOctet(U)
	defer UOct.Free()

	UTOct := bindings.NewOctet(UT)
	defer UTOct.Free()

	VOct := bindings.NewOctet(V)
	defer VOct.Free()

	IDOct := bindings.NewOctet(ID)
	defer IDOct.Free()

	MESSAGEOct := bindings.NewOctet(MESSAGE)
	defer MESSAGEOct.Free()

	PaOct := bindings.NewOctet(Pa)
	defer PaOct.Free()

	err = bindings.ServerBN254CX(h, d, HIDOct, HTIDOct, yOct, SSOct, UOct, UTOct, VOct, nil, nil, IDOct, MESSAGEOct, t, PaOct)

	HID = HIDOct.ToBytes()

	HTID = HTIDOct.ToBytes()

	y = yOct.ToBytes()

	return
}

// Server1BN254CX is a wrapper of bindings.MPIN_BN254CX_SERVER_1.
func Server1BN254CX(h int, d int, ID []byte) (HID []byte, HTID []byte) {

	IDOct := bindings.NewOctet(ID)
	defer IDOct.Free()

	HIDSize := bindings.G1SBN254CX
	HIDOct := bindings.MakeOctet(HIDSize)
	defer HIDOct.Free()

	HTIDSize := bindings.G1SBN254CX
	HTIDOct := bindings.MakeOctet(HTIDSize)
	defer HTIDOct.Free()

	bindings.Server1BN254CX(h, d, IDOct, HIDOct, HTIDOct)

	HID = HIDOct.ToBytes()

	HTID = HTIDOct.ToBytes()

	return
}
