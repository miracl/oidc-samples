// Generated by gen/wrappers/main.go from rsa_wrappers.go.tmpl.

package wrap

import "code.miracl.com/mfa/pkg/gomiracl/bindings"

// RSADecrypt4096 is a wrapper of bindings.RSA_4096_DECRYPT.
func RSADecrypt4096(priv bindings.RSAPrivateKey, G []byte) (F []byte) {

	GOct := bindings.NewOctet(G)
	defer GOct.Free()

	FSize := bindings.RFS4096
	FOct := bindings.MakeOctet(FSize)
	defer FOct.Free()

	bindings.RSADecrypt4096(priv, GOct, FOct)

	F = FOct.ToBytes()

	return
}

// RSAEncrypt4096 is a wrapper of bindings.RSA_4096_ENCRYPT.
func RSAEncrypt4096(pub bindings.RSAPublicKey, F []byte) (G []byte) {

	FOct := bindings.NewOctet(F)
	defer FOct.Free()

	GSize := bindings.RFS4096
	GOct := bindings.MakeOctet(GSize)
	defer GOct.Free()

	bindings.RSAEncrypt4096(pub, FOct, GOct)

	G = GOct.ToBytes()

	return
}

// RSAKeyPair4096 is a wrapper of bindings.RSA_4096_KEY_PAIR.
func RSAKeyPair4096(rng *bindings.Rand, e int32, p []byte, q []byte) (priv bindings.RSAPrivateKey, pub bindings.RSAPublicKey) {

	priv = bindings.NewRSAPrivateKey4096()

	pub = bindings.NewRSAPublicKey4096()

	pOct := bindings.NewOctet(p)
	defer pOct.Free()

	qOct := bindings.NewOctet(q)
	defer qOct.Free()

	bindings.RSAKeyPair4096(rng, e, priv, pub, pOct, qOct)

	return
}

// RSAPrivateKeyKill4096 is a wrapper of bindings.RSA_4096_PRIVATE_KEY_KILL.
func RSAPrivateKeyKill4096(PRIV bindings.RSAPrivateKey) {

	bindings.RSAPrivateKeyKill4096(PRIV)

	return
}
